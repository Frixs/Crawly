<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:InformationRetrievalManager">

    <ResourceDictionary.MergedDictionaries>
        <!--  Order is important  -->
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
        <ResourceDictionary Source="Texts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Hoverless Button  -->
    <Style x:Key="Hoverless" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Regular Button  -->
    <Style
        x:Key="RegularButton"
        BasedOn="{StaticResource Hoverless}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource RegularButtonBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource RegularButtonForegroundBrushKey}" />
        <Setter Property="FontFamily" Value="{StaticResource DosisRegular}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="local:IsBusyProperty.Value" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                FontFamily="{TemplateBinding FontFamily}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Text="{TemplateBinding Content}"
                                Visibility="{TemplateBinding local:IsBusyProperty.Value,
                                                             Converter={local:BooleanToVisibilityConverter}}" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Style="{StaticResource SpinningText}"
                                Visibility="{TemplateBinding local:IsBusyProperty.Value,
                                                             Converter={local:BooleanToVisibilityConverter},
                                                             ConverterParameter=True}">
                                <TextBlock.RenderTransform>
                                    <RotateTransform />
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  Hover On  -->
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource RegularButtonHoverBackground}"
                                        Duration="0:0:0.1" />
                                    <ColorAnimation
                                        Storyboard.TargetProperty="Foreground.Color"
                                        To="{StaticResource RegularButtonHoverForeground}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!--  Hover Off  -->
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource RegularButtonBackground}"
                                        Duration="0:0:0.1" />
                                    <ColorAnimation
                                        Storyboard.TargetProperty="Foreground.Color"
                                        To="{StaticResource RegularButtonForeground}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!--  IsPressed - Action  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource RegularButtonActionForegroundBrushKey}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource RegularButtonActionBackgroundBrushKey}" />
                        </Trigger>
                        <!--  IsEnabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource RegularButtonHoverBackgroundBrushKey}" />
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>