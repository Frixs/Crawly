<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:InformationRetrievalManager"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <!--  TextBox Input (with placeholder)  -->
    <Style BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type TextBox}">

        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{StaticResource MplusMedium}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="{StaticResource InputBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource InputForegroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{StaticResource InputBorderBackgroundBrushKey}" />
        <Setter Property="BorderThickness" Value="2,0,0,2" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">

                    <Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="False"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>

                        <!--  Placeholder  -->
                        <TextBlock
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource MplusMedium}"
                            Foreground="{StaticResource InputPlaceholderForegroundBrushKey}"
                            IsHitTestVisible="False"
                            Text="{TemplateBinding Tag}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>

                        </TextBlock>

                        <!--  Validation exclamation mark  -->
                        <TextBlock
                            Name="exclamation"
                            Margin="0,0,10,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource FontAwesomeSolid}"
                            Foreground="{StaticResource InputErrorBorderBackgroundBrushKey}"
                            IsHitTestVisible="False"
                            Text="{StaticResource FontAwesomeExclamationCircleIcon}"
                            Visibility="Collapsed" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--  Is Disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                            <Setter Property="Background" Value="{StaticResource InputDisabledBackgroundBrushKey}" />
                            <Setter Property="BorderBrush" Value="{StaticResource InputDisabledForegroundBrushKey}" />
                            <Setter Property="Foreground" Value="{StaticResource InputDisabledForegroundBrushKey}" />
                        </Trigger>
                        <!--  Hover  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource InputFocusBorderBackgroundBrushKey}" />
                        </Trigger>
                        <!--  Focus  -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource InputFocusBorderBackgroundBrushKey}" />
                        </Trigger>
                        <!--  Has Error  -->
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            <Setter Property="Foreground" Value="{StaticResource InputErrorBorderBackgroundBrushKey}" />
                            <Setter Property="BorderBrush" Value="{StaticResource InputErrorBorderBackgroundBrushKey}" />
                            <Setter TargetName="exclamation" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--  Delete default error template  -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate />
            </Setter.Value>
        </Setter>

    </Style>

    <!--  TextBox - Small (with placeholder)  -->
    <Style
        x:Key="TextBoxSmall"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type TextBox}">

        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="{StaticResource MplusMedium}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource InputBorderBackgroundBrushKey}" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">

                    <Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="False"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>

                        <!--  Placeholder  -->
                        <TextBlock
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource MplusMedium}"
                            Foreground="{StaticResource InputPlaceholderForegroundBrushKey}"
                            IsHitTestVisible="False"
                            Text="{TemplateBinding Tag}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>

                        </TextBlock>

                        <!--  Validation exclamation mark  -->
                        <TextBlock
                            Name="exclamation"
                            Margin="0,0,5,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource FontAwesomeSolid}"
                            Foreground="{StaticResource InputErrorBorderBackgroundBrushKey}"
                            IsHitTestVisible="False"
                            Text="{StaticResource FontAwesomeExclamationCircleIcon}"
                            Visibility="Collapsed" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource InputFocusBorderBackgroundBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource InputFocusBorderBackgroundBrushKey}" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                            <Setter Property="Foreground" Value="{StaticResource InputErrorBorderBackgroundBrushKey}" />
                            <Setter Property="BorderBrush" Value="{StaticResource InputErrorBorderBackgroundBrushKey}" />
                            <Setter TargetName="exclamation" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--  Delete default error template  -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate />
            </Setter.Value>
        </Setter>

    </Style>

    <!--  Checkbox Input  -->
    <Style BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type CheckBox}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{StaticResource MplusMedium}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="{StaticResource InputBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource InputForegroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{StaticResource InputBorderBackgroundBrushKey}" />
        <Setter Property="BorderThickness" Value="1" />

        <!--  Delete default error template  -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource InputFocusBorderBackgroundBrushKey}" />
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                <Setter Property="BorderBrush" Value="{StaticResource InputErrorBorderBackgroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  CheckBox - Medium  -->
    <Style
        x:Key="CheckBoxMedium"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type CheckBox}">

        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="18" />
            </Style>
            <Style TargetType="Grid">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
        </Style.Resources>
    </Style>

    <!--  Radio Input  -->
    <Style BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type RadioButton}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{StaticResource MplusMedium}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="{StaticResource InputBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource InputForegroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{StaticResource InputBorderBackgroundBrushKey}" />
        <Setter Property="BorderThickness" Value="2,0,0,2" />

        <!--  Delete default error template  -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource InputFocusBorderBackgroundBrushKey}" />
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                <Setter Property="BorderBrush" Value="{StaticResource InputErrorBorderBackgroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ComboBox Input  -->
    <Style BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type ComboBox}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{StaticResource MplusMedium}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="{StaticResource InputBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource InputForegroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{StaticResource InputBorderBackgroundBrushKey}" />
        <Setter Property="BorderThickness" Value="2,0,0,2" />

        <!--  Delete default error template  -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--  Hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource InputFocusBorderBackgroundBrushKey}" />
            </Trigger>
            <!--  Focus  -->
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource InputFocusBorderBackgroundBrushKey}" />
            </Trigger>
            <!--  Has Error  -->
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                <Setter Property="BorderBrush" Value="{StaticResource InputErrorBorderBackgroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Integer Input  -->
    <Style BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type xctk:IntegerUpDown}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{StaticResource MplusMedium}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="{StaticResource InputBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource InputForegroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{StaticResource InputBorderBackgroundBrushKey}" />
        <Setter Property="BorderThickness" Value="2,0,0,2" />

        <!--  Delete default error template  -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--  Hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource InputFocusBorderBackgroundBrushKey}" />
            </Trigger>
            <!--  Focus  -->
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource InputFocusBorderBackgroundBrushKey}" />
            </Trigger>
            <!--  Has Error  -->
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                <Setter Property="BorderBrush" Value="{StaticResource InputErrorBorderBackgroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Double Input  -->
    <Style BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type xctk:DoubleUpDown}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{StaticResource MplusMedium}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="{StaticResource InputBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource InputForegroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{StaticResource InputBorderBackgroundBrushKey}" />
        <Setter Property="BorderThickness" Value="2,0,0,2" />

        <!--  Delete default error template  -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--  Hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource InputFocusBorderBackgroundBrushKey}" />
            </Trigger>
            <!--  Focus  -->
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource InputFocusBorderBackgroundBrushKey}" />
            </Trigger>
            <!--  Has Error  -->
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                <Setter Property="BorderBrush" Value="{StaticResource InputErrorBorderBackgroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  TimeSpan Input  -->
    <Style BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type xctk:TimeSpanUpDown}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{StaticResource MplusMedium}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="{StaticResource InputBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource InputForegroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{StaticResource InputBorderBackgroundBrushKey}" />
        <Setter Property="BorderThickness" Value="2,0,0,2" />

        <!--  Delete default error template  -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource InputFocusBorderBackgroundBrushKey}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource InputFocusBorderBackgroundBrushKey}" />
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                <Setter Property="BorderBrush" Value="{StaticResource InputErrorBorderBackgroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>